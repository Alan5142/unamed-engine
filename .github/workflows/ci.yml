name: CI checks

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install clang-format
        run:  |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main" | sudo tee -a /etc/apt/sources.list
          echo "deb-src http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update && sudo apt-get install -y clang-format-17
          sudo rm /usr/bin/clang-format
          sudo ln -s /usr/bin/clang-format-17 /usr/bin/clang-format
      - name: Format
        run: |
          find src -iname *.hpp -o -iname *.cpp | xargs clang-format -i -style=file --dry-run --Werror
          find tests -iname *.hpp -o -iname *.cpp | xargs clang-format -i -style=file --dry-run --Werror
  build:
    runs-on: ${{ matrix.os }}
    needs: format
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        c_compiler: [gcc, clang, cl]
        cxx_compiler: [g++, clang++, cl]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cxx_compiler: g++
            build_type: Debug
          - os: ubuntu-latest
            c_compiler: gcc
            cxx_compiler: g++
            build_type: Release
          - os: ubuntu-latest
            c_compiler: clang
            cxx_compiler: clang++
            build_type: Debug
          - os: ubuntu-latest
            c_compiler: clang
            cxx_compiler: clang++
            build_type: Release
          - os: windows-latest
            c_compiler: cl
            cxx_compiler: cl
            build_type: Debug
          - os: windows-latest
            c_compiler: cl
            cxx_compiler: cl
            build_type: Release
          - os: macos-latest
            c_compiler: clang
            cxx_compiler: clang++
            build_type: Debug
          - os: macos-latest
            c_compiler: clang
            cxx_compiler: clang++
            build_type: Release
    steps:
      - uses: actions/checkout@v4
      - name: Set up CMake ${{ matrix.c_compiler }} ${{ matrix.cxx_compiler }}
        uses: jwlawson/actions-setup-cmake@v1.14
        with:
          cmake-version: '3.28.x'
      - name: Set up Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: '1.11.1'
      - name: Build
        run: |
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }}
          cmake --build build
